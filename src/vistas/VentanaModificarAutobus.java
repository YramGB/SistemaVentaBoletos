package vistas;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import modelo.Autobus;
import modelo.Boleto;
import modelo.Conexion;

public class VentanaModificarAutobus extends javax.swing.JFrame {

    public VentanaModificarAutobus() {
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/imagenes/iconoAPP.png")).getImage());
        setLocationRelativeTo(null);
        añadirBoletos();
        altaBtn.setEnabled(false);
        consultarVentas_btn.setEnabled(false);
        cerrarSesion_btn.setEnabled(false);
        
        DefaultTableCellRenderer alineacion = new DefaultTableCellRenderer();
        alineacion.setHorizontalAlignment(SwingConstants.CENTER);        
        for(int i = 0; i < tablaBoletos.getColumnCount(); i++){
            tablaBoletos.getColumnModel().getColumn(i).setCellRenderer(alineacion);            
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cerrarSesion_btn = new javax.swing.JToggleButton();
        altaBtn = new javax.swing.JToggleButton();
        consultarVentas_btn = new javax.swing.JToggleButton();
        regresarBtn1 = new javax.swing.JButton();
        modificarDatosBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaBoletos = new javax.swing.JTable();
        buscarDatosBtn = new javax.swing.JButton();
        textoLabel = new javax.swing.JLabel();
        buscarComboBox = new javax.swing.JComboBox<>();
        datoTxt = new javax.swing.JTextField();
        buscarLabel = new javax.swing.JLabel();
        fechaTxt = new com.toedter.calendar.JDateChooser();
        horarioTxt = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Venta de Boletos");

        jPanel1.setBackground(new java.awt.Color(242, 235, 244));
        jPanel1.setMinimumSize(new java.awt.Dimension(1280, 720));
        jPanel1.setPreferredSize(new java.awt.Dimension(1280, 720));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("LOGO");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        cerrarSesion_btn.setBackground(new java.awt.Color(236, 145, 117));
        cerrarSesion_btn.setFont(new java.awt.Font("Agency FB", 0, 36)); // NOI18N
        cerrarSesion_btn.setText("CERRAR SESIÓN");
        cerrarSesion_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarSesion_btnActionPerformed(evt);
            }
        });
        jPanel1.add(cerrarSesion_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 420, 80));

        altaBtn.setBackground(new java.awt.Color(236, 145, 117));
        altaBtn.setFont(new java.awt.Font("Agency FB", 0, 36)); // NOI18N
        altaBtn.setText("DAR DE ALTA A PERSONAL");
        altaBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                altaBtnActionPerformed(evt);
            }
        });
        jPanel1.add(altaBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 440, 80));

        consultarVentas_btn.setBackground(new java.awt.Color(236, 145, 117));
        consultarVentas_btn.setFont(new java.awt.Font("Agency FB", 0, 36)); // NOI18N
        consultarVentas_btn.setText("CONSULTAR VENTAS");
        jPanel1.add(consultarVentas_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 80, 420, 80));

        regresarBtn1.setBackground(new java.awt.Color(236, 145, 117));
        regresarBtn1.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        regresarBtn1.setText("REGRESAR");
        regresarBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regresarBtn1ActionPerformed(evt);
            }
        });
        jPanel1.add(regresarBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, -1, -1));

        modificarDatosBtn.setBackground(new java.awt.Color(236, 145, 117));
        modificarDatosBtn.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        modificarDatosBtn.setText("MODIFICAR");
        modificarDatosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarDatosBtnActionPerformed(evt);
            }
        });
        jPanel1.add(modificarDatosBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1110, 660, 130, 40));

        tablaBoletos.setBackground(new java.awt.Color(242, 235, 244));
        tablaBoletos.setFont(new java.awt.Font("Agency FB", 0, 18)); // NOI18N
        tablaBoletos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaBoletos.setRowHeight(25);
        tablaBoletos.setSelectionBackground(new java.awt.Color(236, 145, 117));
        tablaBoletos.setShowGrid(true);
        jScrollPane1.setViewportView(tablaBoletos);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, 840, 370));

        buscarDatosBtn.setBackground(new java.awt.Color(236, 145, 117));
        buscarDatosBtn.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        buscarDatosBtn.setText("BUSCAR");
        buscarDatosBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarDatosBtnActionPerformed(evt);
            }
        });
        jPanel1.add(buscarDatosBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 270, 130, 40));

        textoLabel.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        textoLabel.setText("INGRESAR NUMERO DE AUTOBUS:");
        jPanel1.add(textoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, -1, 40));

        buscarComboBox.setBackground(new java.awt.Color(236, 145, 117));
        buscarComboBox.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        buscarComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Numero de autobus", "Origen", "Destino", "Precio", "Fecha", "Horario" }));
        buscarComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarComboBoxActionPerformed(evt);
            }
        });
        jPanel1.add(buscarComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 210, 510, 40));

        datoTxt.setBackground(new java.awt.Color(236, 145, 117));
        datoTxt.setFont(new java.awt.Font("Agency FB", 1, 24)); // NOI18N
        jPanel1.add(datoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 270, 260, 40));

        buscarLabel.setFont(new java.awt.Font("Agency FB", 0, 24)); // NOI18N
        buscarLabel.setText("BUSCAR POR:");
        jPanel1.add(buscarLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 170, -1, 40));
        jPanel1.add(fechaTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 270, 260, 40));

        try {
            horarioTxt.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(horarioTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 270, 260, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cerrarSesion_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarSesion_btnActionPerformed
        VentanaLogin ventanaLogin = new VentanaLogin();
        ventanaLogin.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_cerrarSesion_btnActionPerformed

    private void altaBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_altaBtnActionPerformed

    }//GEN-LAST:event_altaBtnActionPerformed

    private void regresarBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regresarBtn1ActionPerformed
        VentanaAdministrador admin = new VentanaAdministrador();
        admin.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_regresarBtn1ActionPerformed

    private void modificarDatosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarDatosBtnActionPerformed
        Autobus autobus = new Autobus();                
        int fila = tablaBoletos.getSelectedRow();
        try{            
            if(fila == -1){
                JOptionPane.showMessageDialog(this, "No se ha seleccionado un boleto", "Boleto no seleccionado", JOptionPane.WARNING_MESSAGE);             
            }else{
                
                String numAutobus = tablaBoletos.getValueAt(fila, 0).toString();
                String origen = tablaBoletos.getValueAt(fila, 1).toString();
                String destino = tablaBoletos.getValueAt(fila, 2).toString();
                String precio = tablaBoletos.getValueAt(fila, 3).toString();
                String fecha = tablaBoletos.getValueAt(fila, 4).toString();
                String horario = tablaBoletos.getValueAt(fila, 5).toString();               
                
                int autobusInt = Integer.parseInt(numAutobus);
                autobus.setNumeroAutobus(autobusInt);
                autobus.setNombreOrigen(origen); 
                autobus.setNombreDestino(destino);
                double precioD = Double.parseDouble(precio);        
                autobus.setPrecioViaje(precioD);
                autobus.setHorarioViaje(horario);               
                autobus.setFechaViaje(fecha);                               
                
                VentanaModificarDatosAutobus editarAutobus = new VentanaModificarDatosAutobus(autobus);
                editarAutobus.setVisible(true);
                this.setVisible(false); 
            }            
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "No se ha seleccionado un boleto", "Boleto no seleccionado", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_modificarDatosBtnActionPerformed

    private void buscarDatosBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarDatosBtnActionPerformed
        Autobus autobus = new Autobus();
        try{
            if(buscarComboBox.getSelectedItem().equals("Numero de autobus")){
                try{
                    int numeroAutobus = Integer.parseInt(datoTxt.getText());
                    autobus.setNumeroAutobus(numeroAutobus); 
                    this.seleccionarNumeroAutobus(tablaBoletos, autobus);
                }catch(NumberFormatException e){
                    JOptionPane.showMessageDialog(this, "El valor ingresado debe ser de valor numérico", "Dato invalido", JOptionPane.ERROR_MESSAGE);
                }                
            }else if(buscarComboBox.getSelectedItem().equals("Origen")){
                autobus.setNombreOrigen(datoTxt.getText());
                this.seleccionarOrigen(tablaBoletos, autobus);
            }else if(buscarComboBox.getSelectedItem().equals("Destino")){
                autobus.setNombreDestino(datoTxt.getText());
                this.seleccionarDestino(tablaBoletos, autobus);
            }else if(buscarComboBox.getSelectedItem().equals("Precio")){
                double precio = Double.parseDouble(datoTxt.getText());
                autobus.setPrecioViaje(precio);
                this.seleccionarPrecio(tablaBoletos, autobus);
            }else if(buscarComboBox.getSelectedItem().equals("Fecha")){
                SimpleDateFormat conv;
                conv = new SimpleDateFormat("yyyy-MM-dd");
                String fecha = conv.format(this.fechaTxt.getDate());
                autobus.setFechaViaje(fecha);
                this.seleccionarFecha(tablaBoletos, autobus);
            }else if(buscarComboBox.getSelectedItem().equals("Horario")){
                autobus.setHorarioViaje(horarioTxt.getText() + ":00");
                this.seleccionarHorario(tablaBoletos, autobus);
            }else{
                JOptionPane.showMessageDialog(this, "Opción no encontrada", "Error de selección", JOptionPane.ERROR_MESSAGE);             
            }  
        }catch(Exception e){
            JOptionPane.showMessageDialog(this, "Debe seleccionar una opción para buscar", "Error de selección", JOptionPane.ERROR_MESSAGE);      
        }    
    }//GEN-LAST:event_buscarDatosBtnActionPerformed

    public void seleccionarNumeroAutobus(JTable tabla,Autobus numeroAutobus){
        
        Autobus viaje = new Autobus();
        
        Conexion conn = new Conexion();
        Connection reg = conn.conectar();  
        Connection con = reg; 
         
        PreparedStatement ps = null;
        ResultSet rs = null;
               
        DefaultTableModel tablaAutobuses = new DefaultTableModel();
        tablaAutobuses.addColumn("No Autobus");
        tablaAutobuses.addColumn("Origen");
        tablaAutobuses.addColumn("Destino");
        tablaAutobuses.addColumn("Precio");
        tablaAutobuses.addColumn("Fecha");
        tablaAutobuses.addColumn("Hora");
        tabla.setModel(tablaAutobuses);
        
        String []datos = new String[6];
        
        String sql = "SELECT * FROM autobus WHERE numeroAutobus = '" + numeroAutobus.getNumeroAutobus() + "'";
        
        try{
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            while(rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                datos[5] = rs.getString(6);
                tablaAutobuses.addRow(datos);               
            }
            tabla.setModel(tablaAutobuses);            
            
        }catch(Exception e){
            System.out.println("Error en la consulta: " + e);
            
        }      
    }
    
    public void seleccionarOrigen(JTable tabla,Autobus nombreOrigen){
        
        Autobus viaje = new Autobus();
        
        Conexion conn = new Conexion();
        Connection reg = conn.conectar();  
        Connection con = reg; 
         
        PreparedStatement ps = null;
        ResultSet rs = null;
               
        DefaultTableModel tablaAutobuses = new DefaultTableModel();
        tablaAutobuses.addColumn("No Autobus");
        tablaAutobuses.addColumn("Origen");
        tablaAutobuses.addColumn("Destino");
        tablaAutobuses.addColumn("Precio");
        tablaAutobuses.addColumn("Fecha");
        tablaAutobuses.addColumn("Hora");
        tabla.setModel(tablaAutobuses);
        
        String []datos = new String[6];
        
        String sql = "SELECT * FROM autobus WHERE nombreOrigen = '" + nombreOrigen.getNombreOrigen() + "'";
        
        try{
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            while(rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                datos[5] = rs.getString(6);
                tablaAutobuses.addRow(datos);               
            }
            tabla.setModel(tablaAutobuses);            
            
        }catch(Exception e){
            System.out.println("Error en la consulta: " + e);
            
        }      
    }
    
    public void seleccionarDestino(JTable tabla,Autobus nombreDestino){
        
        Autobus viaje = new Autobus();
        
        Conexion conn = new Conexion();
        Connection reg = conn.conectar();  
        Connection con = reg; 
         
        PreparedStatement ps = null;
        ResultSet rs = null;
               
        DefaultTableModel tablaAutobuses = new DefaultTableModel();
        tablaAutobuses.addColumn("No Autobus");
        tablaAutobuses.addColumn("Origen");
        tablaAutobuses.addColumn("Destino");
        tablaAutobuses.addColumn("Precio");
        tablaAutobuses.addColumn("Fecha");
        tablaAutobuses.addColumn("Hora");
        tabla.setModel(tablaAutobuses);
        
        String []datos = new String[6];
        
        String sql = "SELECT * FROM autobus WHERE nombreDestino = '" + nombreDestino.getNombreDestino() + "'";
        
        try{
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            while(rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                datos[5] = rs.getString(6);
                tablaAutobuses.addRow(datos);               
            }
            tabla.setModel(tablaAutobuses);            
            
        }catch(Exception e){
            System.out.println("Error en la consulta: " + e);
            
        }      
    }
    
    public void seleccionarPrecio(JTable tabla,Autobus precio){
        
        Autobus viaje = new Autobus();
        
        Conexion conn = new Conexion();
        Connection reg = conn.conectar();  
        Connection con = reg; 
         
        PreparedStatement ps = null;
        ResultSet rs = null;
               
        DefaultTableModel tablaAutobuses = new DefaultTableModel();
        tablaAutobuses.addColumn("No Autobus");
        tablaAutobuses.addColumn("Origen");
        tablaAutobuses.addColumn("Destino");
        tablaAutobuses.addColumn("Precio");
        tablaAutobuses.addColumn("Fecha");
        tablaAutobuses.addColumn("Hora");
        tabla.setModel(tablaAutobuses);
        
        String []datos = new String[6];
        
        String sql = "SELECT * FROM autobus WHERE precioViaje = '" + precio.getPrecioViaje() + "'";
        
        try{
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            while(rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                datos[5] = rs.getString(6);
                tablaAutobuses.addRow(datos);               
            }
            tabla.setModel(tablaAutobuses);            
            
        }catch(Exception e){
            System.out.println("Error en la consulta: " + e);
            
        }      
    }
    
    public void seleccionarFecha(JTable tabla,Autobus fecha){
        
        Autobus viaje = new Autobus();
        
        Conexion conn = new Conexion();
        Connection reg = conn.conectar();  
        Connection con = reg; 
         
        PreparedStatement ps = null;
        ResultSet rs = null;
               
        DefaultTableModel tablaAutobuses = new DefaultTableModel();
        tablaAutobuses.addColumn("No Autobus");
        tablaAutobuses.addColumn("Origen");
        tablaAutobuses.addColumn("Destino");
        tablaAutobuses.addColumn("Precio");
        tablaAutobuses.addColumn("Fecha");
        tablaAutobuses.addColumn("Hora");
        tabla.setModel(tablaAutobuses);
        
        String []datos = new String[6];
        
        String sql = "SELECT * FROM autobus WHERE fechaViaje = '" + fecha.getFechaViaje() + "'";
        
        try{
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            while(rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                datos[5] = rs.getString(6);
                tablaAutobuses.addRow(datos);               
            }
            tabla.setModel(tablaAutobuses);            
            
        }catch(Exception e){
            System.out.println("Error en la consulta: " + e);
            
        }      
    }
    
    public void seleccionarHorario(JTable tabla,Autobus horario){
        
        Autobus viaje = new Autobus();
        
        Conexion conn = new Conexion();
        Connection reg = conn.conectar();  
        Connection con = reg; 
         
        PreparedStatement ps = null;
        ResultSet rs = null;
               
        DefaultTableModel tablaAutobuses = new DefaultTableModel();
        tablaAutobuses.addColumn("No Autobus");
        tablaAutobuses.addColumn("Origen");
        tablaAutobuses.addColumn("Destino");
        tablaAutobuses.addColumn("Precio");
        tablaAutobuses.addColumn("Fecha");
        tablaAutobuses.addColumn("Hora");
        tabla.setModel(tablaAutobuses);
        
        String []datos = new String[6];
        
        String sql = "SELECT * FROM autobus WHERE horarioViaje = '" + horario.getHorarioViaje() + "'";
        
        try{
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            while(rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                datos[5] = rs.getString(6);
                tablaAutobuses.addRow(datos);               
            }
            tabla.setModel(tablaAutobuses);            
            
        }catch(Exception e){
            System.out.println("Error en la consulta: " + e);
            
        }      
    }
    
    private void buscarComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarComboBoxActionPerformed
        asignarCampo();
    }//GEN-LAST:event_buscarComboBoxActionPerformed

    public void asignarCampo(){
        if(buscarComboBox.getSelectedItem().equals("Numero de autobus")){
            textoLabel.setText("INGRESAR NUMERO DE AUTOBUS:");
            fechaTxt.setVisible(false);
            horarioTxt.setVisible(false);
            datoTxt.setVisible(true);
        }else if(buscarComboBox.getSelectedItem().equals("Origen")){
            textoLabel.setText("INGRESAR ORIGEN:");
            fechaTxt.setVisible(false);
            horarioTxt.setVisible(false);
            datoTxt.setVisible(true);
        }else if(buscarComboBox.getSelectedItem().equals("Destino")){
            textoLabel.setText("INGRESAR DESTINO:");
            fechaTxt.setVisible(false);
            horarioTxt.setVisible(false);
            datoTxt.setVisible(true);
        }else if(buscarComboBox.getSelectedItem().equals("Precio")){
            textoLabel.setText("INGRESAR PRECIO:");
            fechaTxt.setVisible(false);
            horarioTxt.setVisible(false);
            datoTxt.setVisible(true);
        }else if(buscarComboBox.getSelectedItem().equals("Fecha")){
            textoLabel.setText("INGRESAR FECHA:");
            datoTxt.setVisible(false);
            horarioTxt.setVisible(false);
            fechaTxt.setVisible(true);
        }else if(buscarComboBox.getSelectedItem().equals("Horario")){
            textoLabel.setText("INGRESAR HORARIO:");
            fechaTxt.setVisible(false);
            datoTxt.setVisible(false);
            horarioTxt.setVisible(true);
        }else{
            JOptionPane.showMessageDialog(this, "Opción no encontrada", "Error de selección", JOptionPane.ERROR_MESSAGE);             
        }
    }
    
    public void añadirBoletos(){
        DefaultTableModel tablaAutobuses = new DefaultTableModel();
        tablaAutobuses.addColumn("No Autobus");
        tablaAutobuses.addColumn("Origen");
        tablaAutobuses.addColumn("Destino");
        tablaAutobuses.addColumn("Precio");
        tablaAutobuses.addColumn("Fecha");
        tablaAutobuses.addColumn("Hora");
        tablaBoletos.setModel(tablaAutobuses);
        
        Conexion conn = new Conexion();
        Connection reg = conn.conectar();  
        Connection con = reg; 
         
        PreparedStatement ps = null;
        ResultSet rs = null;
        
        String []datos = new String[6];
        
        String sql = "SELECT * FROM autobus";
        
        try{
            ps = con.prepareStatement(sql);
            rs = ps.executeQuery();
            
            while(rs.next()){
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                datos[5] = rs.getString(6);
                tablaAutobuses.addRow(datos);
            }
            tablaBoletos.setModel(tablaAutobuses);
            
        }catch(Exception e){
            System.out.println("Error en la consulta: " + e);
            
        }     
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaModificarAutobus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaModificarAutobus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaModificarAutobus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaModificarAutobus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaModificarAutobus().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton altaBtn;
    private javax.swing.JComboBox<String> buscarComboBox;
    private javax.swing.JButton buscarDatosBtn;
    private javax.swing.JLabel buscarLabel;
    private javax.swing.JToggleButton cerrarSesion_btn;
    private javax.swing.JToggleButton consultarVentas_btn;
    private javax.swing.JTextField datoTxt;
    private com.toedter.calendar.JDateChooser fechaTxt;
    private javax.swing.JFormattedTextField horarioTxt;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton modificarDatosBtn;
    private javax.swing.JButton regresarBtn1;
    private javax.swing.JTable tablaBoletos;
    private javax.swing.JLabel textoLabel;
    // End of variables declaration//GEN-END:variables
}
